#!/bin/sh /etc/rc.common
# shellcheck disable=3043,2317,2046,2034,2154,3057 shell=bash
#Forked from: https://github.com/simonyiszk/openwrt-rrm-nr-distributor
NAME=rrm_nr
USE_PROCD=1
START=99

{ [ -r /lib/functions/rrm_nr.sh ] && . /lib/functions/rrm_nr.sh; } || {
  echo "Error: Missing rrm_nr_common.sh file"
  exit 1
}

custom_procd_add_mdns() {
  local all_rrm_nr
  local iface
  local length
  local all_rrm_nr_length
  local service
  local proto
  local port

  service="$NAME"
  proto="udp"
  port="5247"

  json_add_object "${service}_$port"
  json_add_string "service" "_$service._$proto.local"
  json_add_int port "$port"

  json_add_array txt
  length=0
  for iface in $(ubus list hostapd.*); do
    eval $(ubus -v call "$iface" get_status | jsonfilter -e ssid='$.ssid' -e phy='$.phy')
    if is_802dot11k_nr_enabled "$ssid" "$phy"; then
      rrm_nr="$(ubus call "${iface}" rrm_nr_get_own | jsonfilter -e '$.value')"
      json_add_string "" "wlan$length=$rrm_nr"
      length=$((length + 1))
      all_rrm_nr="$all_rrm_nr, $rrm_nr"
    fi
  done
  json_add_string "" "wlan_length=$length"

  [ $length -gt 0 ] && json_select ..

  json_select ..
  all_rrm_nr_length=$(echo "$all_rrm_nr" | grep -o ", \[" | wc -l)
  log_message 3 "Broadcasted Wi-Fi interfaces[$all_rrm_nr_length] with enabled 802.11k NR: [${all_rrm_nr:1} ]"
}

_procd_add_mdns() {
  procd_open_data
  json_add_object "mdns"
  custom_procd_add_mdns "$@"
  json_close_object
  procd_close_data
}

start_service() {
  check_wifi
  wait_for_wifi
  procd_open_instance
  procd_set_param command /bin/sh "/usr/bin/$NAME"
  _procd_add_mdns "$@"
  procd_close_instance
  ubus call umdns reload
}

service_triggers() {
  procd_add_reload_trigger wireless
}
