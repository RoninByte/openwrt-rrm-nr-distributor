#Destination file: /etc/init.d/update_rrm_nr
#!/bin/sh /etc/rc.common
#Forked from: https://github.com/simonyiszk/openwrt-rrm-nr-distributor

readonly NAME=update_rrm_nr
readonly USE_PROCD=1
readonly START=99


function count_enabled_wifi_interfaces() {
	function is_wifi_interface_enabled() {
		local num_disabled=$( uci -q show wireless.${1:?Missing: Wi-Fi interface UCI option name} | grep -c ".disabled='1'" )
		[ $num_disabled -eq 0 ] && return 0 || return 1
	}

	local uci_option_name up_configured=0 up_disabled=0
	for uci_option_name in $( uci -q show wireless | grep "=wifi-iface" | sed "s/wireless.\(.*\)=wifi-iface/\1/" ); do
		up_configured=$(( up_configured + 1 ))
		! is_wifi_interface_enabled "$uci_option_name" && up_disabled=$(( up_disabled + 1 ))
	done
	printf "$(( up_configured - up_disabled ))"
}


function abort_when_no_enabled_wifi_interfaces() {
	[ $( count_enabled_wifi_interfaces ) -gt 0 ] && return 0
	logger -t "${NAME}" -pdaemon.error "No enabled Wi-Fi interfaces found"
	exit 1
}


function wait_until_all_enabled_wifi_interfaces_are_up() {
	function are_all_wireless_interfaces_up() {
		local num_up=$( ubus list hostapd.* | wc -l )
		[ $( count_enabled_wifi_interfaces ) -eq $num_up ] && return 0 || return 1
	}
	local count=6
	while [ $count -gt 0 ] && ! are_all_wireless_interfaces_up; do
		logger -t "${NAME}" -pdaemon.info "Waiting for all Wi-Fi interfaces to initialize"
		count=$(( count - 1 ))
		sleep 30
	done

	[ $count -le 0 ] && logger -t "${NAME}" -pdaemon.error "Aborted due to long waiting time; check all hanging enabled Wi-Fi interfaces"
}


function custom_procd_add_mdns {
	procd_open_data
	json_add_object "mdns"

	function create_header() {
		#https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml?search=5247
		local service="$NAME" protocol="udp" port="5247"
		json_add_object "${service}_$port"
		json_add_string "service" "_$service._$protocol.local"
		json_add_int port "$port"
	}; create_header

	local all_rrm_nr
	function create_own_rrm_nr_list() {
		function is_802dot11k_nr_enabled() {
			local uci_option_name="$( uci show wireless | grep ifname=\'${1:?Missing: Wi-Fi interface name}\' | sed "s/wireless.\(.*\).ifname.*/\1/" )"

			local ieee80211k="$( uci -q show wireless.$uci_option_name.ieee80211k | cut -d\' -f2 )"
			local rrm_neighbor_report="$( uci -q show wireless.$uci_option_name.rrm_neighbor_report | cut -d\' -f2 )"

			( [ "$ieee80211k" == "1" ] && ([ -z "$rrm_neighbor_report" ] || [ "$rrm_neighbor_report" == "1" ]) ) && return 0 || return 1
		}

		json_add_array txt
		local value length=0
		for value in $(ubus list hostapd.*); do
			if is_802dot11k_nr_enabled "${value#hostapd.}"; then
				local rrm_nr="$( ubus call ${value} rrm_nr_get_own | jsonfilter -e '$.value')"
				json_add_string "" "wlan$length=$rrm_nr"
				length=$(( length + 1 ))
				all_rrm_nr="$all_rrm_nr, $rrm_nr"
			else
				logger -t "${NAME}" -pdaemon.warn "Skipped Wi-Fi interface without 802.11k neighbor reporting enabled: ${value#hostapd.}"
			fi
		done
		json_add_string "" "wlan_length=$length"
		json_select ..
	}; create_own_rrm_nr_list

	json_select ..

	json_close_object
	procd_close_data

	local all_rrm_nr_length=$( printf "$all_rrm_nr" | grep -o ", \[" | wc -l )
	logger -t "${NAME}" -pdaemon.info "Broadcasted Wi-Fi interfaces[$all_rrm_nr_length] with enabled 802.11k NR: [${all_rrm_nr:1} ]"
}


start_service() {
	abort_when_no_enabled_wifi_interfaces
	wait_until_all_enabled_wifi_interfaces_are_up

	procd_open_instance
	procd_set_param command /bin/sh "/usr/bin/$NAME"
	custom_procd_add_mdns
	procd_close_instance

	/etc/init.d/umdns restart
}


service_triggers() {
	procd_add_reload_trigger wireless
}
